---
interface Props {
    href: string
    target?: string
    rel?: string
    variant?: 'primary' | 'transparent'
    external?: boolean
}

const { href, target = '', rel = '', variant = 'primary', external = false } = Astro.props
---

<a class={variant} href={href} target={target} rel={rel}>
    <slot />
    {!external && <slot name="icon" />}
    {
        external && (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path d="M14 3v2h3.59l-9.83 9.83l1.41 1.41L19 6.41V10h2V3m-2 16H5V5h7V3H5c-1.11 0-2 .89-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7h-2z" />
            </svg>
        )
    }
</a>

<style>
    a {
        text-decoration: none;
        padding: 0.5rem 1rem;
        font-weight: 600;
        text-transform: uppercase;
        border-radius: 0.25rem;
        transition: all var(--animation);
        display: flex;
        gap: 0.5rem;
        align-items: center;
        width: fit-content;

        :global(svg) {
            flex: 0 0 1rem;
            width: 1rem;
            height: 1rem;
            fill: currentColor;
        }
    }

    .primary {
        color: white;
        background-color: var(--brand-solid);

        &:hover {
            background-color: var(--brand-solid-hover);
        }
    }

    .transparent {
        color: var(--brand-solid);
        background-color: white;

        &:hover {
            opacity: 0.8;
        }
    }
</style>
