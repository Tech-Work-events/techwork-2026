---
import { CFP_CONFIG, getCFPStatus } from '../../config/cfp'

interface CFPData {
    title: string
    description: string
    isOpen: boolean
    deadline?: string
    eventDate?: string
    location?: string
}

let cfpData: CFPData = {
    title: "Tech'Work Lyon 2026",
    description: CFP_CONFIG.description,
    isOpen: CFP_CONFIG.isOpen,
    deadline: CFP_CONFIG.deadline,
    eventDate: CFP_CONFIG.eventDate,
    location: CFP_CONFIG.location
}

const cfpStatus = getCFPStatus()

// R√©cup√©ration des donn√©es depuis Conference Hall
try {
    const apiUrl = 'https://conference-hall.io/api/v1/event/tech-work-2026?key=2dd5a5af-0aad-4028-8e5b-d11736362418'
    console.log('Fetching from Conference Hall API:', apiUrl)
    
    const response = await fetch(apiUrl, {
        headers: {
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache'
        }
    })
    console.log('Response status:', response.status)
    
    if (response.ok) {
        const apiData = await response.json()
        console.log('API Data received:', JSON.stringify(apiData, null, 2))
        
        // Mise √† jour uniquement du titre depuis l'API Conference Hall
        // Les autres donn√©es (dates, statut) sont g√©r√©es localement dans CFP_CONFIG
        cfpData = {
            title: apiData.name || cfpData.title,
            description: cfpData.description,
            isOpen: CFP_CONFIG.isOpen, // G√©r√© localement
            deadline: CFP_CONFIG.deadline, // G√©r√© localement
            eventDate: CFP_CONFIG.eventDate, // G√©r√© localement
            location: CFP_CONFIG.location, // G√©r√© localement
            formats: [] // Pas de formats dans cette API
        }
        
        console.log('Processed CFP Data:', JSON.stringify(cfpData, null, 2))
    } else {
        console.error('API Response not OK:', response.status, response.statusText)
        const errorText = await response.text()
        console.error('Error details:', errorText)
    }
} catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des donn√©es Conference Hall:', error)
    // On garde les donn√©es par d√©faut
}

// Expose les donn√©es pour le composant parent
---

<script define:vars={{ cfpData }}>
    window.cfpData = cfpData;
</script>

<!-- Status Display -->
<div class={`inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold mb-6 ${cfpStatus.className}`}>
    <span class="mr-2">{cfpStatus.emoji}</span>
    CFP {cfpStatus.label}
</div>

<h2 class="text-2xl sm:text-3xl font-black text-gray-900 mb-6">
    Le CFP est {cfpData.isOpen ? 'ouvert' : 'ferm√©'} !
</h2>

<div class="space-y-4 mb-8">
    {cfpData.deadline && (
        <div class="flex items-center space-x-3">
            <span class="w-8 h-8 bg-primary-100 text-primary-600 rounded-full flex items-center justify-center text-sm font-bold">üìÖ</span>
            <span class="text-gray-700"><strong>Date limite :</strong> {cfpData.deadline}</span>
        </div>
    )}
    {cfpData.eventDate && (
        <div class="flex items-center space-x-3">
            <span class="w-8 h-8 bg-secondary-100 text-secondary-600 rounded-full flex items-center justify-center text-sm font-bold">üéØ</span>
            <span class="text-gray-700"><strong>√âv√©nement :</strong> {cfpData.eventDate}</span>
        </div>
    )}
    {cfpData.location && (
        <div class="flex items-center space-x-3">
            <span class="w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center text-sm font-bold">üìç</span>
            <span class="text-gray-700"><strong>Lieu :</strong> {cfpData.location}</span>
        </div>
    )}
</div>

{cfpStatus.isOpen && (
    <div class="flex flex-col sm:flex-row gap-4">
        <a 
            href={CFP_CONFIG.submissionUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="btn btn-primary text-lg px-8 py-4 hover-lift group"
        >
            <span class="mr-2 group-hover:animate-bounce-gentle">üöÄ</span>
            Proposer un talk
        </a>
        <a 
            href="#formats" 
            class="btn btn-secondary text-lg px-8 py-4 hover-lift group"
        >
            <span class="mr-2 group-hover:animate-bounce-gentle">üìã</span>
            Voir les formats
        </a>
    </div>
)}

<!-- Dynamic Formats (if available from API) -->
{cfpData.formats && cfpData.formats.length > 0 && (
    <div class="mt-12">
        <h3 class="text-xl font-bold text-gray-900 mb-6">Formats disponibles</h3>
        <div class="grid gap-4">
            {cfpData.formats.map((format) => (
                <div class="bg-white rounded-lg p-4 border border-gray-200">
                    <div class="flex justify-between items-start">
                        <div>
                            <h4 class="font-semibold text-gray-900">{format.name}</h4>
                            <p class="text-sm text-gray-600 mt-1">{format.description}</p>
                        </div>
                        <span class="text-sm text-primary-600 font-semibold bg-primary-50 px-2 py-1 rounded">
                            {format.duration}
                        </span>
                    </div>
                </div>
            ))}
        </div>
    </div>
)}